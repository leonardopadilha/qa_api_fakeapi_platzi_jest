{
  "numFailedTestSuites": 0,
  "numFailedTests": 0,
  "numPassedTestSuites": 3,
  "numPassedTests": 16,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 3,
  "numTotalTests": 16,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1741970384437,
  "success": false,
  "testResults": [
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1741970391771,
        "runtime": 7186,
        "slow": true,
        "start": 1741970384585
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\user\\Desktop\\fakeapi_platzi\\test\\users\\user.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "#Users",
            "GET /users"
          ],
          "duration": 879,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#Users GET /users Deve retornar todos os usuários",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "Deve retornar todos os usuários"
        },
        {
          "ancestorTitles": [
            "#Users",
            "GET /users"
          ],
          "duration": 444,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#Users GET /users Deve retornar apenas um usuário",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 19,
          "retryReasons": [],
          "status": "passed",
          "title": "Deve retornar apenas um usuário"
        },
        {
          "ancestorTitles": [
            "#Users",
            "GET /users"
          ],
          "duration": 434,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#Users GET /users Deve retornar erro devido id do usuário inválido",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "Deve retornar erro devido id do usuário inválido"
        },
        {
          "ancestorTitles": [
            "#Users",
            "POST /users/is-available"
          ],
          "duration": 426,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#Users POST /users/is-available Deve informar se o email já está cadastrado",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "Deve informar se o email já está cadastrado"
        },
        {
          "ancestorTitles": [
            "#Users",
            "POST /users"
          ],
          "duration": 628,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#Users POST /users Deve cadastrar o usuário com sucesso",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 19,
          "retryReasons": [],
          "status": "passed",
          "title": "Deve cadastrar o usuário com sucesso"
        },
        {
          "ancestorTitles": [
            "#Users",
            "POST /users"
          ],
          "duration": 541,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#Users POST /users Deve retornar retorno devido dados do usuário em branco",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "Deve retornar retorno devido dados do usuário em branco"
        },
        {
          "ancestorTitles": [
            "#Users",
            "POST /users"
          ],
          "duration": 491,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#Users POST /users Deve validar a obrigatoriedade do campo nome no momento do cadastro",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "Deve validar a obrigatoriedade do campo nome no momento do cadastro"
        },
        {
          "ancestorTitles": [
            "#Users",
            "POST /users"
          ],
          "duration": 634,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#Users POST /users Deve validar a obrigatoriedade do campo email no momento do cadastro",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "Deve validar a obrigatoriedade do campo email no momento do cadastro"
        },
        {
          "ancestorTitles": [
            "#Users",
            "POST /users"
          ],
          "duration": 627,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#Users POST /users Deve validar a obrigatoriedade do campo password no momento do cadastro",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "Deve validar a obrigatoriedade do campo password no momento do cadastro"
        },
        {
          "ancestorTitles": [
            "#Users",
            "POST /users"
          ],
          "duration": 662,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#Users POST /users Deve validar a obrigatoriedade do campo avatar no momento do cadastro",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "Deve validar a obrigatoriedade do campo avatar no momento do cadastro"
        }
      ],
      "failureMessage": null,
      "v8Coverage": [
        {
          "codeTransformResult": {
            "code": "export default getId = array => {\n  return Math.floor(Math.random() * array.body.length);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRJZCIsImFycmF5IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiYm9keSIsImxlbmd0aCJdLCJzb3VyY2VzIjpbImdldElkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGdldElkID0gKGFycmF5KSA9PiB7XHJcbiAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGFycmF5LmJvZHkubGVuZ3RoKVxyXG59Il0sIm1hcHBpbmdzIjoiQUFBQSxlQUFlQSxLQUFLLEdBQUlDLEtBQUssSUFBSztFQUNoQyxPQUFPQyxJQUFJLENBQUNDLEtBQUssQ0FBQ0QsSUFBSSxDQUFDRSxNQUFNLENBQUMsQ0FBQyxHQUFHSCxLQUFLLENBQUNJLElBQUksQ0FBQ0MsTUFBTSxDQUFDO0FBQ3RELENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=",
            "originalCode": "export default getId = (array) => {\r\n  return Math.floor(Math.random() * array.body.length)\r\n}",
            "sourceMapPath": "C:/Users/user/AppData/Local/Temp/jest/jest-transform-cache-a146f36938ed29343e5afa9664f30f52-79ef2876fae7ca75eedb2aa53dc48338/37/getId_3747b1b138cb724ca5ffe5e481c20adc.map",
            "wrapperLength": 0
          },
          "result": {
            "scriptId": "1157",
            "url": "C:\\Users\\user\\Desktop\\fakeapi_platzi\\functions\\getId.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 681,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "getId",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 91,
                    "count": 5
                  }
                ],
                "isBlockCoverage": true
              }
            ]
          }
        },
        {
          "codeTransformResult": {
            "code": "import { faker } from '@faker-js/faker';\nexport default function newUser() {\n  return {\n    name: faker.person.fullName(),\n    email: faker.internet.email(),\n    password: faker.internet.password(),\n    avatar: \"https://picsum.photos/800\"\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJmYWtlciIsIm5ld1VzZXIiLCJuYW1lIiwicGVyc29uIiwiZnVsbE5hbWUiLCJlbWFpbCIsImludGVybmV0IiwicGFzc3dvcmQiLCJhdmF0YXIiXSwic291cmNlcyI6WyJuZXdVc2VyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZha2VyIH0gZnJvbSAnQGZha2VyLWpzL2Zha2VyJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5ld1VzZXIoKSB7XHJcbiAgcmV0dXJuIHtcclxuICAgIG5hbWU6IGZha2VyLnBlcnNvbi5mdWxsTmFtZSgpLFxyXG4gICAgZW1haWw6IGZha2VyLmludGVybmV0LmVtYWlsKCksXHJcbiAgICBwYXNzd29yZDogZmFrZXIuaW50ZXJuZXQucGFzc3dvcmQoKSxcclxuICAgIGF2YXRhcjogXCJodHRwczovL3BpY3N1bS5waG90b3MvODAwXCJcclxuICB9XHJcbn0iXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLEtBQUssUUFBUSxpQkFBaUI7QUFFdkMsZUFBZSxTQUFTQyxPQUFPQSxDQUFBLEVBQUc7RUFDaEMsT0FBTztJQUNMQyxJQUFJLEVBQUVGLEtBQUssQ0FBQ0csTUFBTSxDQUFDQyxRQUFRLENBQUMsQ0FBQztJQUM3QkMsS0FBSyxFQUFFTCxLQUFLLENBQUNNLFFBQVEsQ0FBQ0QsS0FBSyxDQUFDLENBQUM7SUFDN0JFLFFBQVEsRUFBRVAsS0FBSyxDQUFDTSxRQUFRLENBQUNDLFFBQVEsQ0FBQyxDQUFDO0lBQ25DQyxNQUFNLEVBQUU7RUFDVixDQUFDO0FBQ0giLCJpZ25vcmVMaXN0IjpbXX0=",
            "originalCode": "import { faker } from '@faker-js/faker';\r\n\r\nexport default function newUser() {\r\n  return {\r\n    name: faker.person.fullName(),\r\n    email: faker.internet.email(),\r\n    password: faker.internet.password(),\r\n    avatar: \"https://picsum.photos/800\"\r\n  }\r\n}",
            "sourceMapPath": "C:/Users/user/AppData/Local/Temp/jest/jest-transform-cache-a146f36938ed29343e5afa9664f30f52-79ef2876fae7ca75eedb2aa53dc48338/80/newUser_802b99102e763bc915855a65cd2258ed.map",
            "wrapperLength": 0
          },
          "result": {
            "scriptId": "1158",
            "url": "C:\\Users\\user\\Desktop\\fakeapi_platzi\\functions\\newUser.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 1278,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "newUser",
                "ranges": [
                  {
                    "startOffset": 56,
                    "endOffset": 245,
                    "count": 5
                  }
                ],
                "isBlockCoverage": true
              }
            ]
          }
        }
      ]
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1741970394743,
        "runtime": 2885,
        "slow": false,
        "start": 1741970391858
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\user\\Desktop\\fakeapi_platzi\\test\\auth\\login.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "#Auth"
          ],
          "duration": 444,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#Auth Login não deve ser feito com sucesso devido request sem dados",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "Login não deve ser feito com sucesso devido request sem dados"
        },
        {
          "ancestorTitles": [
            "#Auth"
          ],
          "duration": 455,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#Auth Login não deve ser feito com sucesso devido email incorreto",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "Login não deve ser feito com sucesso devido email incorreto"
        },
        {
          "ancestorTitles": [
            "#Auth"
          ],
          "duration": 482,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#Auth Login não deve ser feito com sucesso devido senha incorreta",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "Login não deve ser feito com sucesso devido senha incorreta"
        },
        {
          "ancestorTitles": [
            "#Auth"
          ],
          "duration": 849,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#Auth Login deve ser realizado com sucesso",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "Login deve ser realizado com sucesso"
        }
      ],
      "failureMessage": null,
      "v8Coverage": [
        {
          "codeTransformResult": {
            "code": "export default getId = array => {\n  return Math.floor(Math.random() * array.body.length);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRJZCIsImFycmF5IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiYm9keSIsImxlbmd0aCJdLCJzb3VyY2VzIjpbImdldElkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGdldElkID0gKGFycmF5KSA9PiB7XHJcbiAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGFycmF5LmJvZHkubGVuZ3RoKVxyXG59Il0sIm1hcHBpbmdzIjoiQUFBQSxlQUFlQSxLQUFLLEdBQUlDLEtBQUssSUFBSztFQUNoQyxPQUFPQyxJQUFJLENBQUNDLEtBQUssQ0FBQ0QsSUFBSSxDQUFDRSxNQUFNLENBQUMsQ0FBQyxHQUFHSCxLQUFLLENBQUNJLElBQUksQ0FBQ0MsTUFBTSxDQUFDO0FBQ3RELENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=",
            "originalCode": "export default getId = (array) => {\r\n  return Math.floor(Math.random() * array.body.length)\r\n}",
            "sourceMapPath": "C:/Users/user/AppData/Local/Temp/jest/jest-transform-cache-a146f36938ed29343e5afa9664f30f52-79ef2876fae7ca75eedb2aa53dc48338/37/getId_3747b1b138cb724ca5ffe5e481c20adc.map",
            "wrapperLength": 0
          },
          "result": {
            "scriptId": "1560",
            "url": "C:\\Users\\user\\Desktop\\fakeapi_platzi\\functions\\getId.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 681,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "getId",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 91,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              }
            ]
          }
        }
      ]
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1741970396502,
        "runtime": 1683,
        "slow": false,
        "start": 1741970394819
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Users\\user\\Desktop\\fakeapi_platzi\\test\\products\\products.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "#Products",
            "GET /products"
          ],
          "duration": 702,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#Products GET /products Deve retornar todos os produtos",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "Deve retornar todos os produtos"
        },
        {
          "ancestorTitles": [
            "#Products",
            "GET /products"
          ],
          "duration": 467,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "#Products GET /products Não deve retornar um produto inexistente",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "Não deve retornar um produto inexistente"
        }
      ],
      "failureMessage": null,
      "v8Coverage": [
        {
          "codeTransformResult": {
            "code": "export default getId = array => {\n  return Math.floor(Math.random() * array.body.length);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRJZCIsImFycmF5IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiYm9keSIsImxlbmd0aCJdLCJzb3VyY2VzIjpbImdldElkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGdldElkID0gKGFycmF5KSA9PiB7XHJcbiAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGFycmF5LmJvZHkubGVuZ3RoKVxyXG59Il0sIm1hcHBpbmdzIjoiQUFBQSxlQUFlQSxLQUFLLEdBQUlDLEtBQUssSUFBSztFQUNoQyxPQUFPQyxJQUFJLENBQUNDLEtBQUssQ0FBQ0QsSUFBSSxDQUFDRSxNQUFNLENBQUMsQ0FBQyxHQUFHSCxLQUFLLENBQUNJLElBQUksQ0FBQ0MsTUFBTSxDQUFDO0FBQ3RELENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=",
            "originalCode": "export default getId = (array) => {\r\n  return Math.floor(Math.random() * array.body.length)\r\n}",
            "sourceMapPath": "C:/Users/user/AppData/Local/Temp/jest/jest-transform-cache-a146f36938ed29343e5afa9664f30f52-79ef2876fae7ca75eedb2aa53dc48338/37/getId_3747b1b138cb724ca5ffe5e481c20adc.map",
            "wrapperLength": 0
          },
          "result": {
            "scriptId": "1878",
            "url": "C:\\Users\\user\\Desktop\\fakeapi_platzi\\functions\\getId.js",
            "functions": [
              {
                "functionName": "",
                "ranges": [
                  {
                    "startOffset": 0,
                    "endOffset": 681,
                    "count": 1
                  }
                ],
                "isBlockCoverage": true
              },
              {
                "functionName": "getId",
                "ranges": [
                  {
                    "startOffset": 23,
                    "endOffset": 91,
                    "count": 2
                  }
                ],
                "isBlockCoverage": true
              }
            ]
          }
        }
      ]
    }
  ],
  "wasInterrupted": false
}